(function(){var n,e,t,r,a,i,o;n=require("aws-sdk"),r=require("underscore"),o=require("q"),i=require("winston"),a=require("fs"),e=require("beanstalkify"),t=function(){function t(t){var r;this.elasticBeanstalkAppName=t.elasticBeanstalkAppName,this.awsAccessKeyId=t.awsAccessKeyId,this.awsSecretAccessKey=t.awsSecretAccessKey,this.awsSessionToken=t.awsSessionToken,this.awsRegion=t.awsRegion;for(r in arguments[0])if(!arguments[0][r]&&"awsSessionToken"!==r)throw new Error(r+" is required");this.awsCredentials={accessKeyId:this.awsAccessKeyId,secretAccessKey:this.awsSecretAccessKey,sessionToken:this.awsSessionToken||null,region:this.awsRegion},this.awsElasticBeanstalk=new n.ElasticBeanstalk(this.awsCredentials),this.awsCloudWatch=new n.CloudWatch(this.awsCredentials),this.beanstalkify=new e(this.awsCredentials),i.info("AWS Beanstalk and CloudWatch have been setup for '"+this.elasticBeanstalkAppName+"' application located in '"+this.awsRegion+"'")}var s,l,m;return s="64bit Amazon Linux 2015.03 v2.0.0 running Node.js",l=120,t.prototype.checkDeploymentParams=function(n){var e,t,r,a,i;for(r=["environmentType","archiveFilePath","beanstalkConfig","outputPath"],i=[],e=0,t=r.length;t>e;e++){if(a=r[e],!n[a])throw new Error("--"+a+" options is required");i.push(void 0)}return i},t.prototype.getUniqueSuffix=function(n){return null==n&&(n=5),Math.random().toString(36).slice(2).substring(0,n)},m=function(n,e){return r.isString(e)&&(e=new Error(e)),i.error(e),n.reject(e)},t.prototype._blueGreenDeploymentAction=function(n){var e,t,r,s,l,m;return s=n.existingEnvironment,r=n.environmentType,t=n.beanstalkifyParams,e=n.alarmsConfiguration,m=n.outputPath,l=t.environmentName+"-"+this.getUniqueSuffix(),l.length>=23&&(l=r+"-"+this.getUniqueSuffix(10),i.info("Proposed Environment Name is too long. Using generated one: "+l+"...")),t.environmentName=l,this.beanstalkify.deploy(t).then(function(n){return function(n){var e;return e=JSON.stringify(n,null,2),o.nfcall(a.writeFile,m,e)}}(this)).then(function(n){return function(){return n.swapEnvironmentCnames({fromOldEnvName:s.EnvironmentName,toNewEnvName:t.environmentName,alarmsConfiguration:e})}}(this)).then(function(n){return function(){return n.terminateOldEnviroments({environmentType:r})}}(this)).then(function(n){return function(){return t.environmentName+" has been deployed (blue/green) successfuly"}}(this))},t.prototype._deploymentAction=function(n){var e,t,r;return t=n.beanstalkifyParams,e=n.alarmsConfiguration,r=n.outputPath,this.beanstalkify.deploy(t).then(function(n){return function(n){var e;return e=JSON.stringify(n,null,2),o.nfcall(a.writeFile,r,e)}}(this)).then(function(n){return function(){return n.getElbNameByEnvironmentName(t.environmentName)}}(this)).then(function(n){return function(e){return n.createCloudWatchAlarms({elbName:e,environmentName:t.environmentName,alarms:t.alarmsConfiguration})}}(this)).then(function(n){return function(){return t.environmentName+" has been deployed successfuly"}}(this))},t.prototype.deploy=function(n){var e,t,r,l,m,u,c,f;m=n.environmentType,e=n.archiveFilePath,r=n.beanstalkConfig,f=n.outputPath,t=n.awsStackName;try{this.checkDeploymentParams(arguments[0])}catch(c){return u=c,o.reject(u)}return l={archiveFilePath:e,environmentName:this.elasticBeanstalkAppName+"-"+m,beanstalkConfig:r,awsStackName:t||s},i.info("Going to write env data to `"+f+"`"),i.info("Performing a standard deployment of '"+l.environmentName+"' ("+l.environmentName+".elasticbeanstalk.com)"),this.beanstalkify.deploy(l).then(function(n){return function(n){var e;return e=JSON.stringify(n,null,2),o.nfcall(a.writeFile,f,e)}}(this))},t.prototype.deployBlueGreen=function(n){var e,t,r,a,l,m,u,c,f,h,v,p,d;u=n.environmentType,t=n.archiveFilePath,a=n.beanstalkConfig,v=n.outputPath,r=n.awsStackName,e=n.alarmsConfiguration;try{this.checkDeploymentParams(arguments[0])}catch(f){return c=f,o.reject(c)}return m=o.defer(),null==e&&(e=[]),l={archiveFilePath:t,environmentName:this.elasticBeanstalkAppName+"-"+u,beanstalkConfig:a,awsStackName:r||s},i.info("Performing a blue/green deployment of '"+l.environmentName+"' ("+l.environmentName+".elasticbeanstalk.com)"),p=this.getEnvironmentWithCname(l.environmentName),h=function(n){return function(t){return i.info("The following cname '"+l.environmentName+".elasticbeanstalk.com' is available..."),n._deploymentAction({beanstalkifyParams:l,alarmsConfiguration:e,outputPath:v}).then(function(n){return m.resolve(n)})["catch"](function(n){return m.reject(n)})}}(this),d=function(n){return function(t){return i.info("The following cname '"+l.environmentName+".elasticbeanstalk.com' is NOT available..."),n._blueGreenDeploymentAction({existingEnvironment:t,environmentType:u,beanstalkifyParams:l,alarmsConfiguration:e,outputPath:v}).then(m.resolve)["catch"](m.reject)}}(this),p.done(d,h),m.promise},t.prototype.deployUniqueEnvironment=function(n){var e,t,r,l,m,u,c,f,h;m=n.environmentType,e=n.archiveFilePath,r=n.beanstalkConfig,h=n.outputPath,t=n.awsStackName;try{return this.checkDeploymentParams(arguments[0]),f=this.elasticBeanstalkAppName+"-"+m+"-"+this.getUniqueSuffix(),f.length>=23&&(f=m+"-"+this.getUniqueSuffix(10),i.info("Proposed Environment Name is too long. Using generated one: "+f+"...")),l={archiveFilePath:e,environmentName:f,beanstalkConfig:r,outputPath:h,awsStackName:t||s},i.info("Performing a unique deployment of '"+l.environmentName+"' ("+l.environmentName+".elasticbeanstalk.com)"),this.beanstalkify.deploy(l).then(function(n){return function(n){var e;return e=JSON.stringify(n,null,2),o.nfcall(a.writeFile,h,e),l.environmentName+" has been deployed successfuly"}}(this))}catch(c){return u=c,o.reject(u)}},t.prototype.getAllEnvironmentsWithCname=function(n){return i.info("Getting environments where CNAME matching the following Regex ("+n+".elasticbeanstalk.com) in "+this.elasticBeanstalkAppName),o.nfcall(this.awsElasticBeanstalk.describeEnvironments.bind(this.awsElasticBeanstalk),{ApplicationName:this.elasticBeanstalkAppName,IncludeDeleted:!1}).then(function(e){return function(e){var t;return t=r.filter(e.Environments,function(e){return new RegExp(n+".elasticbeanstalk.com").test(e.CNAME)}),i.info(t.length+" environments found matching the RegExp"),t}}(this))},t.prototype.getEnvironmentWithCname=function(n){return this.getAllEnvironmentsWithCname(n).then(function(e){return 0===e.length?o.reject(new Error("Environment '"+n+"' not found!")):e[0]})},t.prototype.waitUntilEnvironmentIsHealthy=function(n,e){return null==e&&(e=o.defer()),i.info("Waiting until new environment is ready and green..."),this.awsElasticBeanstalk.describeEnvironments({EnvironmentNames:[n]},function(t){return function(r,a){return r?m(e,r):"Ready"===a.Environments[0].Status?"Green"===a.Environments[0].Health?e.resolve(a.Environments[0]):e.reject("Environment is "+a.Environments[0].Health):setTimeout(function(){return t.waitUntilEnvironmentIsHealthy(n,e)},5e3)}}(this)),e.promise},t.prototype.waitForDnsToPropagate=function(n){return i.info("Waiting for 60 seconds for the DNS of '"+n+"' to propagate..."),o.delay(6e4)},t.prototype.swapEnvironmentCnames=function(n){var e,t,r;return t=n.fromOldEnvName,r=n.toNewEnvName,e=n.alarmsConfiguration,i.info("Swapping CNAMEs from "+t+" to "+r+"..."),o.nfcall(this.awsElasticBeanstalk.swapEnvironmentCNAMEs.bind(this.awsElasticBeanstalk),{SourceEnvironmentName:t,DestinationEnvironmentName:r}).then(function(n){return function(){return n.waitUntilEnvironmentIsHealthy(r)}}(this)).then(function(n){return function(){return n.waitForDnsToPropagate(r)}}(this)).then(function(n){return function(){return n.getCloudWatchAlarmNamesByEnvironmentPrefix(t)}}(this)).then(function(n){return function(e){return o.all([n.deleteCloudWatchAlarms(e),n.getElbNameByEnvironmentName(r)])}}(this)).then(function(n){return function(t){var a,i;return a=t[0],i=t[1],n.createCloudWatchAlarms({elbName:i,environmentName:r,alarms:e})}}(this))},t.prototype.swapEnvironmentCnamesByCname=function(n){var e,t,a,s,l;return t=n.fromOldEnvCName,l=n.toNewEnvCName,e=n.alarmsConfiguration,i.info("Swapping CNAMEs from "+t+" to "+l+"..."),s=null,a=null,this.getAllEnvironmentsWithCname("\\w*").then(function(n){return function(e){return s=r.find(e,function(n){return t===n.CNAME}),a=r.find(e,function(n){return l===n.CNAME}),s&&a?o.nfcall(n.awsElasticBeanstalk.swapEnvironmentCNAMEs.bind(n.awsElasticBeanstalk),{SourceEnvironmentName:s.EnvironmentName,DestinationEnvironmentName:a.EnvironmentName}):o.reject(t+" or "+l+" could not be found in application "+n.elasticBeanstalkAppName)}}(this)).then(function(n){return function(){return n.waitUntilEnvironmentIsHealthy(a.EnvironmentName)}}(this)).then(function(n){return function(){return n.waitForDnsToPropagate(a.EnvironmentName)}}(this)).then(function(n){return function(){return n.getCloudWatchAlarmNamesByEnvironmentPrefix(s.EnvironmentName)}}(this)).then(function(n){return function(e){return o.all([n.deleteCloudWatchAlarms(e),n.getElbNameByEnvironmentName(a.EnvironmentName)])}}(this)).then(function(n){return function(t){var r,i;return r=t[0],i=t[1],n.createCloudWatchAlarms({elbName:i,environmentName:a.EnvironmentName,alarms:e})}}(this))},t.prototype.terminateEnvironment=function(n){var e,t;return e=n.environmentName,t=n.safely,null==t&&(t=!0),i.info("Terminating Environment named "+e+"..."),this.getAllEnvironmentsWithCname("\\w*").then(function(n){return function(a){var s;return s=r.find(a,function(n){return e===n.EnvironmentName}),s?t===!0&&(i.info("Performing safe check before terminating..."),new RegExp(n.elasticBeanstalkAppName+"-(prod|prev|stag|preview|production|staging|uat).elasticbeanstalk.com").test(s.CNAME))?o.reject("You are trying the terminate a protected Environment '"+e+"'"):o.nfcall(n.awsElasticBeanstalk.terminateEnvironment.bind(n.awsElasticBeanstalk),{EnvironmentName:e}):o.reject("Environment "+e+" could not be found in "+n.elasticBeanstalkAppName)}}(this))},t.prototype.terminateOldEnviroments=function(n){var e,t,r;return(e=n.environmentType)?(r=".*"+e+"-\\w*",t=[],this.getAllEnvironmentsWithCname(r).then(function(n){return function(e){return t=e.map(function(e){return n.terminateEnvironment({environmentName:e.EnvironmentName})}),o.allSettled(t).then(function(n){var e,t,r;for(e=0,t=n.length;t>e;e++)r=n[e],"fulfilled"===r.state?i.info("Environment "+r.value.EnvironmentName+" has been terminated ("+r.value.Status+")"):i.error("Environment "+r.value.EnvironmentName+" has been terminated ("+r.value.Status+")");return"Environments are terminated"})}}(this))["catch"](function(n){return i.info("No environments found to kill for the following type: '"+e+"'")})):o.reject("No environmentType specified, please provide an environment Type (preview, prod, ...)")},t.prototype.getElbNameByEnvironmentName=function(n){return i.info("Getting Elastic Load Blancer by environment name ("+n+")..."),o.nfcall(this.awsElasticBeanstalk.describeEnvironmentResources.bind(this.awsElasticBeanstalk),{EnvironmentName:n}).then(function(e){return function(e){var t,r,a,i;return t=null!=e&&null!=(r=e.EnvironmentResources)&&null!=(a=r.LoadBalancers)&&null!=(i=a[0])?i.Name:void 0,t?t:o.reject("ElasticLoadBlancer resource is not available for this environment '"+n+"'")}}(this))},t.prototype.getCloudWatchAlarmNamesByEnvironmentPrefix=function(n){return i.info("Getting CloudWatch Alarms by environment prefix ("+n+"-*)..."),o.nfcall(this.awsCloudWatch.describeAlarms.bind(this.awsCloudWatch),{AlarmNamePrefix:n+"-"}).then(function(n){return function(n){return r.pluck(n.MetricAlarms,"AlarmName")}}(this))},t.prototype.deleteCloudWatchAlarms=function(n){return i.info("Deleting CloudWatch Alarms..."),o.nfcall(this.awsCloudWatch.deleteAlarms.bind(this.awsCloudWatch),{AlarmNames:n}).then(function(e){return function(e){return i.info("Deleted CloudWatch Alarms: "+n.join(", "))}}(this))},t.prototype.createCloudWatchAlarm=function(n){var e,t,r,a;return r=n.elbName,a=n.environmentName,e=n.alarm,i.info("Creating CloudWatch Alarm: "+a+"-"+e.metricName+" for elb: "+r+"..."),t={AlarmName:a+"-"+e.metricName,ActionsEnabled:!0,AlarmActions:e.alarmActions,MetricName:e.metricName,Namespace:e.namespace,Statistic:e.statistic,Dimensions:[{Name:"elbName",Value:r}],Period:e.period,EvaluationPeriods:e.evaluationPeriods,Threshold:e.threshold,ComparisonOperator:e.comparisonOperator},o.nfcall(this.awsCloudWatch.putMetricAlarm.bind(this.awsCloudWatch),t).then(function(n){return function(n){return"Created CloudWatch Alarm: "+t.AlarmName}}(this))},t.prototype.createCloudWatchAlarms=function(n){var e,t,r,a;return t=n.elbName,r=n.environmentName,(e=n.alarms)?(i.info("Creating CloudWatch Alarms for elb: "+t+"..."),a=e.map(function(n){return createCloudWatchAlarm({elbName:t,environmentName:r,alarm:n})}),o.allSettled(a).then(function(n){var e,t,r,a;for(a=[],e=0,t=n.length;t>e;e++)r=n[e],a.push(i.info(r.value));return a})):void i.info("No alarms to create for "+r)},t}(),module.exports=t}).call(this);